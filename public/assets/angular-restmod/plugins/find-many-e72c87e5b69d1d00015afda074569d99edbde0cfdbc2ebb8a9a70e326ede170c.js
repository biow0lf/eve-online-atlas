!function(e,t){"use strict";e.module("restmod").factory("restmod.FindMany",["restmod","RMPackerCache","inflector",function(e,t,n){return e.mixin(function(){this.define("Scope.$findManyUrl",function(e){return this.$fetchManyUrl?this.$fetchManyUrl(e):this.$url(e)}).define("Scope.$populate",function(e,r){for(var i,o,a=[],s={},u=r||{},l=this.$type,c=l.dummy(!0),f=0;f<e.length;f++)i=e[f],i.$resolved||(s[i.$pk]?s[i.$pk].push(i):(s[i.$pk]=[i],a.push(i.$pk)));return 0===a.length?c:(u[l.getProperty("findManyKey",n.pluralize(l.getProperty("primaryKey")))]=a,o={url:(this.$scope||this).$findManyUrl(this),method:"GET",params:u},c.$dispatch("before-find-many",[o]),l.dummy(!0).$send(o,function(e){try{t.prepare();for(var n,r,i=l.unpack(this,e.data),o=0;o<i.length;o++)if(n=l.inferKey(i[o]),r=s[n])for(var a=0;a<r.length;a++)r[a].$resolved||r[a].$decode(i[o])}finally{t.clear()}}))})})}])}(angular);