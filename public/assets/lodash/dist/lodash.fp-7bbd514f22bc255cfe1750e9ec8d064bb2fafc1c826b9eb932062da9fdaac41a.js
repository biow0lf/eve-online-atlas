!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.fp=t():e.fp=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){function r(e,t){return i(e,e,t)}var i=n(1);"function"==typeof _&&(_=r(_.runInContext())),e.exports=r},function(e,t,n){function r(e,t,n,s){var u,c="function"==typeof t,l=t===Object(t);if(l&&(s=n,n=t,t=void 0),null==n)throw new TypeError;s||(s={});var f={cap:"cap"in s?s.cap:!0,curry:"curry"in s?s.curry:!0,fixed:"fixed"in s?s.fixed:!0,immutable:"immutable"in s?s.immutable:!0,rearg:"rearg"in s?s.rearg:!0},p="rearg"in s&&s.rearg,h=c?n:{ary:e.ary,cloneDeep:e.cloneDeep,curry:e.curry,forEach:e.forEach,isArray:e.isArray,isFunction:e.isFunction,iteratee:e.iteratee,keys:e.keys,rearg:e.rearg,spread:e.spread},d=h.ary,g=h.cloneDeep,m=h.curry,$=h.forEach,v=h.isArray,y=h.isFunction,w=h.keys,b=h.rearg,x=h.spread,E=w(i.aryMethod),A=function(e,t){return 2==t?function(t,n){return e(t,n)}:function(t){return e(t)}},S=function(e){for(var t=e?e.length:0,n=Array(t);t--;)n[t]=e[t];return n},_=function(e){return function(t){return e({},t)}},R=function(e,t){return function(){var n=arguments.length;if(!n)return i;for(var r=Array(n);n--;)r[n]=arguments[n];var i=r[0]=t(r[0]);return e.apply(void 0,r),i}},C=function(e,t){return k(e,function(e){return"function"==typeof e?A(e,t):e})},k=function(e,t,n){return function(){var n=arguments.length;if(!n)return e();for(var r=Array(n);n--;)r[n]=arguments[n];var i=f.rearg?0:n-1;return r[i]=t(r[i]),e.apply(void 0,r)}},P={castArray:function(e){return function(){var t=arguments[0];return v(t)?e(S(t)):e.apply(void 0,arguments)}},iteratee:function(e){return function(){var t=arguments[0],n=arguments[1];if(!f.cap)return e(t,n);n=n>2?n-2:1,t=e(t);var r=t.length;return r&&n>=r?t:A(t,n)}},mixin:function(e){return function(t){var n=this;if(!y(n))return e(n,Object(t));var r=[],i=[];return $(w(t),function(e){var o=t[e];y(o)&&(i.push(e),r.push(n.prototype[e]))}),e(n,Object(t)),$(i,function(e,t){var i=r[t];y(i)?n.prototype[e]=i:delete n.prototype[e]}),n}},runInContext:function(t){return function(n){return r(e,t(n),s)}}},M=function(e,t){e=i.aliasToReal[e]||e;var n=P[e];if(n)return n(t);var r=t;f.immutable&&(o.array[e]?r=R(t,S):o.object[e]?r=R(t,_(t)):o.set[e]&&(r=R(t,g)));var s;return $(E,function(t){return $(i.aryMethod[t],function(n){if(e==n){var o=!c&&i.iterateeAry[e],a=i.methodSpread[e];return s=r,f.fixed&&(s=void 0===a?d(s,t):x(s,a)),f.rearg&&t>1&&(p||!i.skipRearg[e])&&(s=b(s,i.methodRearg[e]||i.aryRearg[t])),f.cap&&o&&(s=C(s,o)),f.curry&&t>1&&(s=m(s,t)),!1}}),!s}),s||(s=r),i.placeholder[e]&&(u=!0,t.placeholder=s.placeholder=a),s};if(!l)return M(t,n);var T=n,O=[];return $(E,function(e){$(i.aryMethod[e],function(e){var t=T[i.remap[e]||e];t&&O.push([e,M(e,t)])})}),$(O,function(e){T[e[0]]=e[1]}),u&&(T.placeholder=a),$(w(T),function(e){$(i.realToAlias[e]||[],function(t){T[t]=T[e]})}),T}var i=n(2),o=i.mutate,a={};e.exports=r},function(e,t){t.aliasToReal={__:"placeholder",all:"some",allPass:"overEvery",apply:"spread",assoc:"set",assocPath:"set",compose:"flowRight",contains:"includes",dissoc:"unset",dissocPath:"unset",each:"forEach",eachRight:"forEachRight",equals:"isEqual",extend:"assignIn",extendWith:"assignInWith",first:"head",init:"initial",mapObj:"mapValues",omitAll:"omit",nAry:"ary",path:"get",pathEq:"matchesProperty",pathOr:"getOr",pickAll:"pick",pipe:"flow",prop:"get",propOf:"propertyOf",propOr:"getOr",somePass:"overSome",unapply:"rest",unnest:"flatten",useWith:"overArgs",whereEq:"filter",zipObj:"zipObject"},t.aryMethod={1:["attempt","castArray","ceil","create","curry","curryRight","floor","fromPairs","invert","iteratee","memoize","method","methodOf","mixin","over","overEvery","overSome","rest","reverse","round","runInContext","spread","template","trim","trimEnd","trimStart","uniqueId","words"],2:["add","after","ary","assign","assignIn","at","before","bind","bindKey","chunk","cloneDeepWith","cloneWith","concat","countBy","curryN","curryRightN","debounce","defaults","defaultsDeep","delay","difference","drop","dropRight","dropRightWhile","dropWhile","endsWith","eq","every","filter","find","find","findIndex","findKey","findLast","findLastIndex","findLastKey","flatMap","flattenDepth","forEach","forEachRight","forIn","forInRight","forOwn","forOwnRight","get","groupBy","gt","gte","has","hasIn","includes","indexOf","intersection","invertBy","invoke","invokeMap","isEqual","isMatch","join","keyBy","lastIndexOf","lt","lte","map","mapKeys","mapValues","matchesProperty","maxBy","merge","minBy","omit","omitBy","orderBy","overArgs","pad","padEnd","padStart","parseInt","partial","partialRight","partition","pick","pickBy","pull","pullAll","pullAt","random","range","rangeRight","rearg","reject","remove","repeat","result","sampleSize","some","sortBy","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","sortedUniqBy","split","startsWith","subtract","sumBy","take","takeRight","takeRightWhile","takeWhile","tap","throttle","thru","times","trimChars","trimCharsEnd","trimCharsStart","truncate","union","uniqBy","uniqWith","unset","unzipWith","without","wrap","xor","zip","zipObject","zipObjectDeep"],3:["assignInWith","assignWith","clamp","differenceBy","differenceWith","getOr","inRange","intersectionBy","intersectionWith","isEqualWith","isMatchWith","mergeWith","pullAllBy","reduce","reduceRight","replace","set","slice","sortedIndexBy","sortedLastIndexBy","transform","unionBy","unionWith","xorBy","xorWith","zipWith"],4:["fill","setWith"]},t.aryRearg={2:[1,0],3:[2,0,1],4:[3,2,0,1]},t.iterateeAry={assignWith:2,assignInWith:2,cloneDeepWith:1,cloneWith:1,dropRightWhile:1,dropWhile:1,every:1,filter:1,find:1,findIndex:1,findKey:1,findLast:1,findLastIndex:1,findLastKey:1,flatMap:1,forEach:1,forEachRight:1,forIn:1,forInRight:1,forOwn:1,forOwnRight:1,isEqualWith:2,isMatchWith:2,map:1,mapKeys:1,mapValues:1,partition:1,reduce:2,reduceRight:2,reject:1,remove:1,some:1,takeRightWhile:1,takeWhile:1,times:1,transform:2},t.methodRearg={assignInWith:[1,2,0],assignWith:[1,2,0],getOr:[2,1,0],isMatchWith:[2,1,0],mergeWith:[1,2,0],pullAllBy:[2,1,0],setWith:[3,1,2,0],sortedIndexBy:[2,1,0],sortedLastIndexBy:[2,1,0],zipWith:[1,2,0]},t.methodSpread={partial:1,partialRight:1},t.mutate={array:{fill:!0,pull:!0,pullAll:!0,pullAllBy:!0,pullAt:!0,remove:!0,reverse:!0},object:{assign:!0,assignIn:!0,assignInWith:!0,assignWith:!0,defaults:!0,defaultsDeep:!0,merge:!0,mergeWith:!0},set:{set:!0,setWith:!0,unset:!0}},t.placeholder={bind:!0,bindKey:!0,curry:!0,curryRight:!0,partial:!0,partialRight:!0},t.realToAlias=function(){var e=Object.prototype.hasOwnProperty,n=t.aliasToReal,r={};for(var i in n){var o=n[i];e.call(r,o)?r[o].push(i):r[o]=[i]}return r}(),t.remap={curryN:"curry",curryRightN:"curryRight",getOr:"get",trimChars:"trim",trimCharsEnd:"trimEnd",trimCharsStart:"trimStart"},t.skipRearg={add:!0,assign:!0,assignIn:!0,concat:!0,difference:!0,gt:!0,gte:!0,lt:!0,lte:!0,matchesProperty:!0,merge:!0,partial:!0,partialRight:!0,random:!0,range:!0,rangeRight:!0,subtract:!0,zip:!0,zipObject:!0}}])});